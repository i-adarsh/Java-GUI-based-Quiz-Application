/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techquizapp.gui;

import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import techquizapp.dao.PerformanceDAO;
import techquizapp.dao.QuestionsDAO;
import techquizapp.pojo.Answer;
import techquizapp.pojo.AnswerStore;
import techquizapp.pojo.Exam;
import techquizapp.pojo.Performance;
import techquizapp.pojo.Question;
import techquizapp.pojo.QuestionStore;
import techquizapp.pojo.UserProfile;

/**
 *
 * @author adarshkumar
 */
public class TakeTestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TakeTestFrame
     */
    private int qno, position = 0;
    private QuestionStore questionStore;
    private AnswerStore answerStore;
    private Exam exam;
    
    public TakeTestFrame() {
        
        initComponents();
        lblUserName.setText("Hello "+ UserProfile.getUserName());
        questionStore = new QuestionStore();
        answerStore = new AnswerStore();
        qno = 1;
        lblquestionNumber.setText(lblquestionNumber.getText()+qno);
        ImageIcon imageIcon = new ImageIcon("/Users/adarshkumar/Documents/NetBeansProjects/TechQuizApp/Images/luck.png");
        jlblImage.setIcon(imageIcon);
        setLocationRelativeTo(null);
        
    }
    
    public TakeTestFrame(Exam exam) {
        this();
        //initComponents();
        this.exam = exam;
        lblTitle.setText(exam.getLanguage().toString().toUpperCase()+" PAPER ");
        loadQuestions();
        showQuestions();
        TimeCounter timeCounter = new TimeCounter();
        timeCounter.start();
    }
    
    private void loadQuestions() {
        try{
            ArrayList<Question> questionList = QuestionsDAO.getQuestionsByExamId(exam.getExamId());
            for (Question question : questionList){
                questionStore.addQuestion(question);
            }
            System.out.println(questionStore);
        }
        catch (SQLException exception){
            JOptionPane.showMessageDialog(null, "DB Error", "TakeTestFrame Error!!", JOptionPane.ERROR_MESSAGE);
            exception.printStackTrace();
        }
    }
    
    private void showQuestions() {
        Question question = questionStore.getQuestion(position);
        buttonGroup1.clearSelection();
        txtQuestion.setText(question.getQuestion());
        jrOption1.setText(question.getAnswer1());
        jrOption2.setText(question.getAnswer2());
        jrOption3.setText(question.getAnswer3());
        jrOption4.setText(question.getAnswer4());
        Answer answer = answerStore.getAnswerByQno(qno);
        if (answer == null){
            return;
        }
        String string = answer.getChosenAnswer();
        switch (string){
            case "Option  1":
                jrOption1.setSelected(true);
                break;
            case "Option  2":
                jrOption1.setSelected(true);
                break;
            case "Option  3":
                jrOption1.setSelected(true);
                break;
            case "Option  4":
                jrOption1.setSelected(true);
                break;
        }
    }
    private String getUserAnswer(){
        if (jrOption1.isSelected())
            return "Option  1";
        else if (jrOption2.isSelected())
            return "Option  2";
        else if (jrOption3.isSelected())
            return "Option  3";
        else if (jrOption4.isSelected())
            return "Option  4";
        else
            return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblUserName = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jlblImage = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();
        lblquestionNumber = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        jrOption2 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        lblTimeCounter = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        lblUserName.setBackground(new java.awt.Color(0, 0, 0));
        lblUserName.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(255, 255, 255));
        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserName.setText("User");

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Quicksand", 1, 26)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("EDITING PAPER");

        jlblImage.setBackground(new java.awt.Color(0, 0, 0));
        jlblImage.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        jlblImage.setForeground(new java.awt.Color(255, 255, 255));
        jlblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblLogout.setBackground(new java.awt.Color(0, 0, 0));
        lblLogout.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(255, 255, 255));
        lblLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogout.setText("Logout");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogoutMouseExited(evt);
            }
        });

        lblquestionNumber.setBackground(new java.awt.Color(0, 0, 0));
        lblquestionNumber.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        lblquestionNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblquestionNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblquestionNumber.setText("Question Number  ");

        txtQuestion.setColumns(20);
        txtQuestion.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        btnNext.setBackground(new java.awt.Color(0, 0, 0));
        btnNext.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(0, 0, 0));
        btnPrevious.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(255, 255, 255));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setFont(new java.awt.Font("Quicksand", 1, 18)); // NOI18N
        btnDone.setForeground(new java.awt.Color(255, 255, 255));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        jrOption1.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption1);
        jrOption1.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        jrOption1.setForeground(new java.awt.Color(255, 255, 255));
        jrOption1.setText("jRadioButton1");

        jrOption3.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption3);
        jrOption3.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        jrOption3.setForeground(new java.awt.Color(255, 255, 255));
        jrOption3.setText("jRadioButton2");

        jrOption2.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption2);
        jrOption2.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        jrOption2.setForeground(new java.awt.Color(255, 255, 255));
        jrOption2.setText("jRadioButton3");

        jrOption4.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption4);
        jrOption4.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        jrOption4.setForeground(new java.awt.Color(255, 255, 255));
        jrOption4.setText("jRadioButton4");

        lblTimeCounter.setBackground(new java.awt.Color(0, 0, 0));
        lblTimeCounter.setFont(new java.awt.Font("Ayuthaya", 1, 18)); // NOI18N
        lblTimeCounter.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jrOption3)
                    .addComponent(jrOption1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrOption4)
                    .addComponent(jrOption2))
                .addGap(118, 118, 118))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(jlblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblquestionNumber)
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTimeCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblUserName)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLogout)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblTimeCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblquestionNumber))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption1)
                    .addComponent(jrOption2))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption3)
                    .addComponent(jrOption4))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblUserName)
                        .addComponent(lblLogout))
                    .addGap(699, 699, 699)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
        // TODO add your handling code here:
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblLogoutMouseClicked

    private void lblLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseEntered
        // TODO add your handling code here:
        lblLogout.setForeground(Color.blue);
        Font font = new Font("Quicksand",Font.ITALIC,18);
        lblLogout.setFont(font);
    }//GEN-LAST:event_lblLogoutMouseEntered

    private void lblLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseExited
        // TODO add your handling code here:
        lblLogout.setForeground(Color.white);
        Font font = new Font("Quicksand",Font.BOLD,18);
        lblLogout.setFont(font);
    }//GEN-LAST:event_lblLogoutMouseExited

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null){
            Question question = questionStore.getQuestionByQNo(qno);
            String correctAnswer = question.getCorrectAnswer();
            Answer answer = new Answer(exam.getExamId(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            Answer attempted = answerStore.getAnswerByQno(qno);
            if (attempted == null){
                answerStore.addAnswer(answer);
            }
            else {
                String previousAnswer = attempted.getChosenAnswer();
                if (previousAnswer.equals(chosenAnswer) == false){
                    int answerPosition = answerStore.removeAnswer(attempted);
                    answerStore.setAnswersAt(answerPosition, answer);
                }
            }
        }
        position++;
        if (position >= questionStore.getCount()){
            JOptionPane.showMessageDialog(null, "Your Questions have all been Answered Successfully.\nPress DONE button to Complete.","Information ",JOptionPane.INFORMATION_MESSAGE);
            System.out.println(questionStore);
            position = 0;
        }
        qno++;
        if (qno > questionStore.getCount()){
            qno = 1;
        }
        lblquestionNumber.setText("Question Number : "+qno);
        showQuestions();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null){
            Question question = questionStore.getQuestionByQNo(qno);
            String correctAnswer = question.getCorrectAnswer();
            Answer answer = new Answer(exam.getExamId(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            Answer attempted = answerStore.getAnswerByQno(qno);
            if (attempted == null){
                answerStore.addAnswer(answer);
            }
            else {
                String previousAnswer = attempted.getChosenAnswer();
                if (previousAnswer.equals(chosenAnswer) == false){
                    int answerPosition = answerStore.removeAnswer(attempted);
                    answerStore.setAnswersAt(answerPosition, answer);
                }
            }
        }
        position--;
        if (position < 0){

            position = questionStore.getCount() - 1;
        }
        qno--;
        if (qno <= 0){
            qno = questionStore.getCount();
        }
        lblquestionNumber.setText("Question Number : "+qno);
        showQuestions();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        SetPaperFrame paperFrame = new SetPaperFrame();
        paperFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null){
            Question question = questionStore.getQuestionByQNo(qno);
            String correctAnswer = question.getCorrectAnswer();
            Answer answer = new Answer(exam.getExamId(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            Answer attempted = answerStore.getAnswerByQno(qno);
            if (attempted == null){
                answerStore.addAnswer(answer);
            }
            else {
                String previousAnswer = attempted.getChosenAnswer();
                if (previousAnswer.equals(chosenAnswer) == false){
                    int answerPosition = answerStore.removeAnswer(attempted);
                    answerStore.setAnswersAt(answerPosition, answer);
                }
            }
        }
        int right = 0, wrong = 0;
        for (Question question : questionStore.getAllQuestions()){
            int questionNumber = question.getQno();
            Answer answer = answerStore.getAnswerByQno(questionNumber);
            if (answer == null){
                continue;
            }
            String attemptedAnswer = answer.getChosenAnswer();
            String correctAnswer = answer.getCorrectAnswer();
            if (attemptedAnswer.equals(correctAnswer))
                right++;
            else
                ++wrong;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("\nRight Answers : "+right);
        stringBuilder.append("\nWrong Answers : "+wrong);
        stringBuilder.append("\nUnattempted : "+(questionStore.getCount() - (right + wrong)));
        JOptionPane.showMessageDialog(null, stringBuilder.toString(), "Result !!!", JOptionPane.INFORMATION_MESSAGE);
        try{
            Performance performance = new Performance(UserProfile.getUserName(), exam.getExamId(), right, wrong, questionStore.getCount() - (right + wrong),(double)right/questionStore.getCount()*100, exam.getLanguage());
            PerformanceDAO.addPerformance(performance);
            JOptionPane.showMessageDialog(null, "Result Saved\nThank You for the Test", "Result !!!", JOptionPane.INFORMATION_MESSAGE);
            ChoosePaperFrame choosePaperFrame = new ChoosePaperFrame();
            choosePaperFrame.setVisible(true);
            this.dispose();
        }catch (SQLException ex){
            JOptionPane.showMessageDialog(null, "Take Test Frame", "SQL Error !!!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnDoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlblImage;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblTimeCounter;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblquestionNumber;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables

    class TimeCounter extends Thread{
        private long durationInMillis = exam.getTotalQuestions() * 30000;
        @Override
        public void run() {
            while (durationInMillis >= 0){
                try{
                    long millis = durationInMillis % 1000;
                    long second = (durationInMillis / 1000) % 60;
                    long minute = (durationInMillis / (1000 * 60)) % 60;
                    long hour = (durationInMillis / (1000 * 60 * 60)) % 24;
                    String time = String.format("%02dh:%02dm:%02ds", hour, minute, second, millis);
                    lblTimeCounter.setText("Time Remaining : "+time);
                    Thread.sleep(1000);
                    durationInMillis -= 1000;
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            btnDone.doClick();
            JOptionPane.showMessageDialog(null,  "Press Done button to Submit the Exam", "Time Over !!!", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
